id: ce-oem-optee/device-node
category_id: optee
_summary: Check OP-TEE device node has been probed in the system.
plugin: shell
user: root
estimated_duration: 20.0
requires: manifest.has_optee == 'True'
imports: from com.canonical.plainbox import manifest
command: 
    node=$(find /dev -type c -regex '.*/\(tee\|teepriv\)[0-9]')
    if [[ -n $node ]]; then
      echo -e "\nInfo: Find OP-TEE node in the system!"
      for x in $node
        do
          echo -e "\n$x"
        done
    else
      echo -e "\nError: Not able to find OP-TEE node in the system!"
      exit 1
    fi

id: ce-oem-optee/connect-plugs
category_id: optee
_summary: Connect plugs and slot for optee test snap
plugin: shell
user: root
requires: 
    snap.name == 'optee-test'
    interface.name == 'tee'
    interface.name == 'tee-plugins'
    interface.name == 'tee-tas'
imports: 
    from com.canonical.certification import interface
    from com.canonical.certification import snap
estimated_duration: 20.0
command: 
    gadget=$(snap list | awk '$NF == "gadget" {print $1}')
    status=0
    plugs=("tee-plugins" "tee-tas" "tee")
    for x in "${plugs[@]}";
    do
        echo -e "\nConnecting interface $x ..."
        if [ "$x" != "tee" ]; then
            if ! snap connect "optee-test:$x" "$gadget:$x"; then
                echo -e "\nError: Connect interface $x failed."
                status=1 
            fi
        else
            if ! snap connect "optee-test:$x" ":$x"; then
                echo -e "\nError: Connect interface $x failed."
                status=1 
            fi
        fi
    done
    if [ $status != 0 ]; then 
        exit 1
    else
        echo -e "\nInfo: Interfaces connect done."
    fi
depends: ce-oem-optee/device-node

id: ce-oem-optee/ta-install
category_id: optee
_summary: Install Trusted Applications for xtest
plugin: shell
user: root
estimated_duration: 20.0
depends: ce-oem-optee/connect-plugs
requires: snap.name == 'optee-test'
imports: from com.canonical.certification import snap
command: 
    gadget=$(snap list | awk '$NF == "gadget" {print $1}')
    # TA will be copied into this path once interface tee-tas connected.
    # optee-test snap need to be installed in devmode
    ta_path="/var/snap/$gadget/common/lib/optee_armtz"
    if [[ -z "$(find "$ta_path" -mindepth 1 -type f -o -type d)" ]]; then
        echo -e "\nError: Not able to find TA!"
        exit 1
    else
        echo -e '\nAttempting to install TA ...'
        if ! optee-test.xtest --install-ta "$ta_path"; then
            echo -e '\nError: TA installed FAIL!'
            exit 1
        else
            echo -e '\nInfo: TA installed SUCCESS!'
        fi    
    fi

id: ce-oem-optee-test-list
estimated_duration: 1
plugin: resource
user: root
command: parse_optee_test.py "$PLAINBOX_PROVIDER_DATA/optee-test.json"
_summary: Collect the test cases support by OP-TEE test(xtest) 

id: ce-oem-optee-test-list-pkcs11
estimated_duration: 1
plugin: resource
user: root
command: parse_optee_test.py "$PLAINBOX_PROVIDER_DATA/optee-test.json" -p
_summary: Collect the test cases related with PKCS11 support by OP-TEE test(xtest) 

unit: template
template-resource: ce-oem-optee-test-list
template-unit: job
id: ce-oem-optee/xtest-{suite}-{description}
_summary: 
  OP-TEE test by using xtest to test suite {suite} {description}
plugin: shell
user: root
category_id: optee
estimated_duration: 30
flags: also-after-suspend
depends: ce-oem-optee/ta-install
command: optee-test.xtest -t {suite} {test_id}

unit: template
template-resource: ce-oem-optee-test-list-pkcs11
template-unit: job
id: ce-oem-optee/xtest-{suite}-{description}
_summary: 
  OP-TEE test by using xtest to test PKCS11 related {suite} {description}
plugin: shell
user: root
category_id: optee
estimated_duration: 30
requires: snap.name == 'optee-test'
imports: from com.canonical.certification import snap
depends: ce-oem-optee/connect-plugs
flags: also-after-suspend
command: optee-test.xtest -t {suite} {test_id}
