id: secure-element/snap-install
_summary: Check "hon-ps-eccx08-tool" been installed.
_purpose:
 Check "hon-ps-eccx08-tool" been installed.
plugin: shell
user: root
category_id: secure-element
estimated_duration: 5
command:
 echo -e '\nChecking needed snap "hon-ps-eccx08-tool"...'
 snap list |grep 'hon-ps-eccx08-tool' > /dev/null
 if [ $? = "1" ]; then
   echo -e '\nInstalling snap "hon-ps-eccx08-tool"'
   snap install hon-ps-eccx08-tool --devmode --edge
 else
  echo -e '\nSnap been installed'
 fi

id: secure-element/atecc
_summary: Test secure element can generate a random value.
_purpose:
 Check secure element revision and can generate a random value.
plugin: shell
user: root
category_id: secure-element
estimated_duration: 5
flags: also-after-suspend
command:
 echo -e '\nChecking secure element...'
 rev=`sudo hon-ps-eccx08-tool.prov read | grep -i "serial number\|Revision"`
 echo $rev | grep '608\|508' > /dev/null
 if [ $? = "0" ]; then
  echo -e '\n'$rev
  echo -e '\nSecure element is correct!'
 else
  echo -e '\n'$rev
  echo -e '\nSecure element is not correct!'
  exit 1
 fi
  echo -e '\nObtain 256 bit random value from chip...\n'
  sudo hon-ps-eccx08-tool.prov random /tmp/random_test
after: secure-element/snap-install

id: gadget_name
_summary: Get the name of gadget snap.
_purpose:
 Get the name of gadget snap.
plugin: resource
estimated_duration: 1
command:
 echo gadget_snap: `snap list |grep -E "^(hbt|hon).*gadget$"|awk -F " " '{print $1}'`

unit: template
template-resource: gadget_name
template-engine: jinja2
template-unit: job
imports: from com.canonical.certification import connections
id: secure-element/pkcs11-{{ gadget_snap }}-atecc
requires:
 {%- if __on_ubuntucore__ %}
 connections.slot=="{{ gadget_snap }}:pkcs11-sec-element-slot-0" and connections.plug == "{{ gadget_snap }}:pkcs11"
 {% endif -%}
category_id: secure-element
_summary: Check pkcs11 token info of ATECC
_description:
  Check pkcs11 token information of ATECC
plugin: shell
user: root
estimated_duration: 20.0
command: {{ gadget_snap }}.pkcs11-tool-atecc -T

unit: template
template-resource: gadget_name
template-engine: jinja2
template-unit: job
imports: from com.canonical.certification import connections
id: secure-element/pkcs11-{{ gadget_snap }}-optee
requires:
 {%- if __on_ubuntucore__ %}
 connections.slot == "{{ gadget_snap }}:pkcs11-optee-slot-0" and connections.plug == "{{ gadget_snap }}:pkcs11"
 {% endif -%}
category_id: secure-element
_summary: Check pkcs11 token info of OPTEE
_description:
  Check pkcs11 token information of OPTEE
plugin: shell
user: root
estimated_duration: 20.0
command: {{ gadget_snap }}.pkcs11-tool-optee -T